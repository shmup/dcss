// vim: set ft=crawlrc:
# TEAMNAME Zot Sluts
# TEAMMEMBERS shmup ces Lucai neckro23 helicomatic
# https://crawl.develz.org/tournament/0.24/
# https://github.com/crawl/crawl/blob/master/crawl-ref/docs/options_guide.txt
# display_char https://github.com/crawl/crawl/blob/master/crawl-ref/docs/options_guide.txt#L2662

##### travel
OPTION = show_travel_trail, travel_delay:-1, rest_delay: -1
explore_stop += items,stairs,shops,altars,gates,portals,runed_doors
explore_stop += greedy_items,greedy_pickup_smart,greedy_visited_item_stack
auto_exclude =
auto_exclude += oklob,statue,roxanne,hyperactive,lightning spire

explore+stop =
stop += god:^($|[^J]|J($|[^i]|i($|[^y])))
stop += The alarm trap emits a blaring wail
stop += A sentinel's mark forms upon you
stop += You are starting to lose your buoyancy
stop += You start to feel a little slower
stop += Your transformation is almost over
stop += Your skin is crawling a little less now
stop += Your magical contamination has completely faded away
stop += found.*trap
stop += You have blundered into a Zot trap
stop += You fall into a shaft
stop += Deactivating autopickup
stop += Your icy armour starts to melt
stop += you are ready to make a new
stop += you are ready to hop once more
: if you.race() == "Ghoul" then
stop += flesh rotting away
: end

##### things for impatient, bad players
OPTION = hp_warning:60, autofight_stop:65

##### ui improvements
OPTION = clear_messages, use_animations:hp, easy_confirm:all, small_more

##### training
OPTION = default_manual_training

##### a e s t h e t i c
char_set = ascii
OPTION = allow_extended_colours, show_player_species
display_char = wall:x2592
display_char = permawall:x2593
display_char = wall_magic:x2591
cset_unicode = cloud:#
cset_unicode = cloud_weak:xa7
cset_unicode = cloud_fading:x263c
use_fake_player_cursor = true
feature = (closed|runed|sealed) door {+,,}
feature += travel trail {x25AA}
feature += explore horizon {x25AB}

##### missile prefs
fire_order  = launcher
fire_order += javelin, boomerang, rock, net, dart, stone
fire_order += inscribed

##### allows a single / to init search prompt
use_modifier_prefix_keys = false
bindkey = [/] CMD_SEARCH_STASHES

##### remappings
bindkey = [S] CMD_SAVE_GAME_NOW
bindkey = [~] CMD_QUIT

##### loot settings
item_stack_summary_minimum = 1
pickup_menu_limit = 1
autopickup = $?!+"/|(
ae := autopickup_exceptions
ae =
ae += useless_item
#ae += dangerous_item
ae += evil_item
ae += amulet of (faith|guardian spirit|inaccuracy|magic regeneration)
ae += amulet of (reflection|regeneration|the acrobat)
ae += ring of (attention|flight|poison resistance|positive energy)
ae += ring of (resist corrosion|see invisible|stealth|teleportation|wizardry)
ae += potions? of lignification
ae += potions? of ambrosia
ae += scrolls? of immolation
ae += scrolls? of vulnerability
: if you.race() ~= "Vampire" then
ae += potion of blood
: end
ae += staff of .*
default_friendly_pickup = none
autopickup_no_burden = true

##### autopickup++
{
local function autopickup(it, name)
    if it.stacks() then
        return true
    end
    if it.is_useless then
        return false
    end
    if it.class(true) == "book" then
        return true
    end
    if name:find("scroll of poison") or name:find("potion of mutation")
       or name:find("curare") or name:find("throwing net") then
        return true
    end
    if name:find("dangerous_item") or name:find("evil_item") then
        return false
    end
    if it.artefact then
        return true
    end
    if name:find("rune of Zot") then
        return true
    end

    local class  = it.class(true)
    if class == "armour" then
        local good_slots = {cloak="Cloak", helmet="Helmet",
                            gloves="Gloves", boots="Boots"}
        st, _ = it.subtype()
        if good_slots[st] ~= nil and
           items.equipped_at(good_slots[st]) == nil then
            return true
        end
        if name:find("gold dragon") or
           name:find("crystal") then
            return true
        end
        if name:find("dragon") then
          arm = items.equipped_at("Body Armour")
          if arm == nil or not arm.name():find("nodragon") then
            return true
          end
        end
    end
    if class == "weapon" then
        if name:find("triple crossbow") then
          return true
        end
        if you.xl() < 15 and (name:find("longbow") or
           name:find("arbalest")) then
          return true
        end
        if name:find("demon") or
           name:find("quick") or
           name:find("double") or
           name:find("eveningstar") or
           name:find("lajatang") or
           name:find("triple sword") or
           name:find("executioner") or
           name:find("hand crossbow") then
            weap = items.equipped_at("Weapon")
            if weap ~= nil and not weap.name():find("norare") then
              return true
            end
        end
    end
end

clear_autopickup_funcs()
add_autopickup_func(autopickup)
}
